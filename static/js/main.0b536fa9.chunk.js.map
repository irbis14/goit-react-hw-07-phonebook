{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsItem/ContactsItem.module.css","components/Contacts/Contacts.module.css","components/Loader/Loader.module.css","components/ContactForm/ContactForm.module.css","redux/app-actions.js","redux/app-reducer.js","redux/persist.js","redux/store.js","redux/app-operations.js","redux/app-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contacts/Contacts.js","components/ContactsItem/ContactsItem.js","App.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","onChangeFilter","INITIAL_STATE","items","filter","createReducer","state","payload","id","loading","_","error","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","devTools","process","axios","defaults","baseURL","dispatch","a","get","data","newContact","name","number","post","then","catch","delete","getItems","getFilter","getLoading","getFilterContact","createSelector","normalizedFilter","toLowerCase","contact","includes","ContactForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","find","oldContact","alert","addContact","reset","className","styles","form","onSubmit","this","label","htmlFor","input","type","pattern","title","required","onChange","button","Component","connect","selectors","operations","Filter","filter__container","Contacts","children","list","ContactsItem","onDeleteContact","map","item","list__item","button__delete","onClick","proptypes","PropTypes","shape","string","isRequired","func","App","fetchContact","deleteContact","isLoading","Loader","color","height","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b536fa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__container\":\"Filter_filter__container__29v7i\",\"label\":\"Filter_label__3K1Rv\",\"input\":\"Filter_input__3rXKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"ContactsItem_list__item__SMVQd\",\"button__delete\":\"ContactsItem_button__delete__1utR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__SqmT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3ybZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2BTvN\",\"label\":\"ContactForm_label__2IE3j\",\"input\":\"ContactForm_input__2mTzM\",\"button\":\"ContactForm_button__2JPE6\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"app/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"app/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"app/fetchContactError\");\n\nexport const addContactRequest = createAction(\"app/addContactRequest\");\nexport const addContactSuccess = createAction(\"app/addContactSuccess\");\nexport const addContactError = createAction(\"app/addContactError\");\n\nexport const deleteContactRequest = createAction(\"app/deleteContactRequest\");\nexport const deleteContactSuccess = createAction(\"app/deleteContactSuccess\");\nexport const deleteContactError = createAction(\"app/deleteContactError\");\n\nexport const onChangeFilter = createAction(\"app/onChangeFilter\");\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  onChangeFilter,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./app-actions\";\n\nconst INITIAL_STATE = {\n  contacts: {\n    items: [],\n    filter: \"\",\n  },\n};\n\nconst items = createReducer(INITIAL_STATE.contacts.items, {\n  [fetchContactSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== +payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(INITIAL_STATE.contacts.filter, {\n  [onChangeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nconst contactsReducer = combineReducers({ items, filter, loading, error });\n\nexport default contactsReducer;\n","import { getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\n/* export const appPersistConfig = {\n  key: \"items\",\n  storage,\n  blacklist: [\"filter\"],\n};\n */\nexport const middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./app-reducer\";\nimport { middleware } from \"./persist\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import axios from \"axios\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./app-actions\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\nconst fetchContact = () => async (dispatch) => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n\n  /* axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error))); */\n};\n\nconst addContact = (newContact) => (dispatch) => {\n  const items = {\n    name: newContact.name,\n    number: newContact.number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", items)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default {\n  fetchContact,\n  addContact,\n  deleteContact,\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { createSelector } from \"reselect\";\n\nconst getItems = (state) => state.contacts.items;\nconst getFilter = (state) => state.contacts.filter;\nconst getLoading = (state) => state.contacts.loading;\n\nconst getFilterContact = createSelector(\n  [getItems, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport default {\n  getItems,\n  getFilter,\n  getLoading,\n  getFilterContact,\n};\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { operations, selectors } from \"../../redux\";\n\nimport styles from \"./ContactForm.module.css\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      this.props.contacts.find((oldContact) => {\n        return oldContact.name.toLowerCase() === this.state.name.toLowerCase();\n      })\n    ) {\n      alert(`${this.state.name} is already in contacts`);\n    } else {\n      this.props.addContact(this.state);\n    }\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label} htmlFor=\"name\">\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: selectors.getItems(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addContact: (newContact) => dispatch(operations.addContact(newContact)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ onChangeFilter }) => {\r\n  return (\r\n    <div className={styles.filter__container}>\r\n      <label htmlFor=\"filter\" className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          onChange={onChangeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import styles from \"./Contacts.module.css\";\r\n\r\nconst Contacts = ({ children }) => {\r\n  return <ul className={styles.list}>{children}</ul>;\r\n};\r\n\r\nexport default Contacts;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsItem.module.css\";\r\n\r\nconst ContactsItem = ({ items, onDeleteContact }) => {\r\n  return items.map((item) => {\r\n    return (\r\n      <li key={item.id} className={styles.list__item}>\r\n        {item.name}: {item.number}\r\n        <button\r\n          id={item.id}\r\n          type=\"button\"\r\n          className={styles.button__delete}\r\n          onClick={onDeleteContact}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nContactsItem.proptypes = {\r\n  items: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import { connect } from \"react-redux\";\nimport { operations, selectors, onChangeFilter } from \"./redux\";\n\nimport { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport Contacts from \"./components/Contacts\";\nimport ContactsItem from \"./components/ContactsItem\";\nimport Loader from \"react-loader-spinner\";\n\nimport \"./App.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from \"./components/Loader/Loader.module.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContact();\n  }\n\n  render() {\n    const { filter, onChangeFilter, deleteContact, isLoading } = this.props;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <Filter onChangeFilter={onChangeFilter} />\n\n        {isLoading && (\n          <Loader\n            className={styles.Loader}\n            type=\"ThreeDots\"\n            color=\"#9aecdb\"\n            height={15}\n            width={80}\n          />\n        )}\n        <Contacts>\n          <ContactsItem items={filter} onDeleteContact={deleteContact} />\n        </Contacts>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, _) => {\n  return {\n    filter: selectors.getFilterContact(state),\n    isLoading: selectors.getLoading(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchContact: () => dispatch(operations.fetchContact()),\n    onChangeFilter: (e) => dispatch(onChangeFilter(e.target.value)),\n    deleteContact: (e) => dispatch(operations.deleteContact(e.target.id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}